# Copyright 2022 Mattermost, Inc.
name: "mattermost/create-tag"
description: "An action that creates an annotated tag from Github Actions"

inputs:
  repository_full_name:
    description: "The repository fullname"
    required: false
  tag:
    description: "The tag name"
    required: true
  commit_sha:
    description: "The commit sha to tag"
    required: true
  message:
    description: "The release notes for the tag commit message"
    required: false

runs:
  using: composite
  steps:
    - name: release/create-annotated-tag
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # 8.0.0
      env:
        REPOSITORY_FULL_NAME: ${{ inputs.repository_full_name }}
        RELEASE_NOTES: ${{ inputs.message }}
      with:
        github-token: ${{ env.GITHUB_TOKEN }}
        script: |
          if (process.env.REPOSITORY_FULL_NAME) {
            var REPOSITORY_FULL_NAME = process.env.REPOSITORY_FULL_NAME;
          } else {
            var REPOSITORY_FULL_NAME = "${{ github.repository }}";
          }

          if (process.env.RELEASE_NOTES) {
            var RELEASE_NOTES = process.env.RELEASE_NOTES;
          } else {
            var RELEASE_NOTES = "Release ${{ inputs.tag }}";
          }

          try {
            var tagResponse = await github.rest.git.createTag({ 
              owner: REPOSITORY_FULL_NAME.split("/")[0],
              repo: REPOSITORY_FULL_NAME.split("/")[1],
              tag: '${{ inputs.tag }}',
              message: RELEASE_NOTES,
              object: '${{ inputs.commit_sha }}',
              type: 'commit',
            });

            var tagObjectSHA = tagResponse.data.sha
            
            await github.rest.git.createRef({
              owner: REPOSITORY_FULL_NAME.split("/")[0],
              repo: REPOSITORY_FULL_NAME.split("/")[1],
              ref: 'refs/tags/${{ inputs.tag }}',
              sha: tagObjectSHA,
            });

            core.info('Tag ${{ inputs.tag }} created successfully!')
          } catch (err) {
            core.error('Failed to create tag ${{ inputs.tag }}')
            core.setFailed(`Action failed with error: ${err}`);
          }
