# Copyright 2022 Mattermost, Inc.
name: "mattermost/expose-events-vars"
description: "An action that exports webhook information as fixed environment variables to be used with the rest of the pipeline"

inputs:
  payload:
    description: "The triggerer payload"
    required: true

runs:
  using: composite
  steps:
    - name: ci/export-payload-environment-vars
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
      env:
        PAYLOAD: ${{ inputs.payload }}
      with:
        script: |
          try {
            var payload = JSON.parse(process.env.PAYLOAD);

            if (payload.hasOwnProperty("X-GitHub-Event")) {
              var githubEvent = payload["X-GitHub-Event"];
            } else {
              throw "X-GitHub-Event property does not exist in the incoming payload. Check the PAYLOAD environment for details."
            }

            core.info(`Incoming event is ${githubEvent}`);
            core.exportVariable("TRIGGERER_EVENT", githubEvent);
            switch (githubEvent) {
              case "push":
                core.exportVariable("TRIGGERER_BRANCH", payload.ref.split("/")[2]);
                core.exportVariable("TRIGGERER_COMMIT_SHA", payload.head_commit.id);
                break;
              case "workflow_run":
                core.exportVariable("TRIGGERER_BRANCH", payload.workflow_run.head_branch);
                core.exportVariable("TRIGGERER_COMMIT_SHA", payload.workflow_run.head_commit.id);
                break;
              case "pull_request":
                core.exportVariable("TRIGGERER_BRANCH", payload.pull_request.head.ref);
                core.exportVariable("TRIGGERER_COMMIT_SHA", payload.pull_request.head.sha);
                break;
            }
            core.exportVariable("TRIGGERER_REPO_NAME", payload.repository.name);
            core.exportVariable("TRIGGERER_REPO_FULL_NAME", payload.repository.full_name);

            core.info("All variables exposed successfully");
          } catch (err) {
            core.setFailed(`Action failed with error: ${err}`);
          }
