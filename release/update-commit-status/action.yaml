# Copyright 2022 Mattermost, Inc.
name: "mattermost/update-commit-status"
description: "An action that updates the commit status"

inputs:
  repository_full_name:
    description: "The full name of the repository"
    required: true
  commit_sha:
    description: "The sha of the commit to update the status"
    required: true
  context:
    description: "The context name of the status check"
    required: true
  description:
    description: "The description of the status check"
    required: true
  status:
    description: "The state of the status check"
    required: true
  target_url:
    description: "The target url of the status check"
    required: false

runs:
  using: composite
  steps:
    - name: ci/update-commit-status
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
      env:
        REPOSITORY_FULL_NAME: ${{ inputs.repository_full_name }}
        SHA: ${{ inputs.commit_sha }}
        CONTEXT: ${{ inputs.context }}
        DESCRIPTION: ${{ inputs.description }}
        STATUS: ${{ inputs.status }}
        TARGET_URL: ${{ inputs.target_url }}
      with:
        script: |
          try {
            var { REPOSITORY_FULL_NAME, SHA, CONTEXT, DESCRIPTION, STATUS } = process.env;

            if("TARGET_URL" in process.env) { 
              var TARGET_URL = process.env.TARGET_URL;
            }
            else { 
              var TARGET_URL = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}";
            }
            core.info(`Vars Repo:  ${REPOSITORY_FULL_NAME} ,SHA:  ${SHA} ,Context:  ${CONTEXT} ,Desc:  ${DESCRIPTION} , URL: ${TARGET_URL} , Status: ${STATUS}`);
            await github.rest.repos.createCommitStatus({
              owner: REPOSITORY_FULL_NAME.split["/"][0],
              repo: REPOSITORY_FULL_NAME.split["/"][1],
              sha: SHA,
              context: CONTEXT,
              description: DESCRIPTION,
              state: STATUS,
              target_url: TARGET_URL
            });
            core.info(`Updated build status with ${STATUS} for commit ${SHA} on ${REPOSITORY_FULL_NAME}`);
          } catch (err) {
            core.setFailed(`Action failed with error: ${err}`);
          }
